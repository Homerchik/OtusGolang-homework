version: '3.9'

services:
  db:
    image: postgres:16.6-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: secure
      POSTGRES_DB: test
      PGDATA: /var/lib/postgresql/data/pgdata
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "user"]
      interval: 5s
      timeout: 3s
      retries: 5
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./config/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    command: ["postgres", "-c", "listen_addresses=*"]

  migrator:
    image: migrator:develop
    depends_on:
      db:
          condition: service_healthy
    restart: on-failure
    environment:
      GOOSE_DRIVER: "postgres"
      GOOSE_DBSTRING: "postgres://postgres:secure@db:5432/test?sslmode=disable"
    entrypoint: ["goose", "-dir", ".", "up"]
  
  mq:
    image: rabbitmq:3.13.7-alpine
    restart: always
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5672:5672"

  config_service:
    image: busybox
    volumes:
      - ./config:/config  # Mount host config directory

  calendar:
    image: calendar:develop
    depends_on:
      - config_service
      - migrator
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./config:/etc/config:ro
    entrypoint: ["/opt/calendar/calendar-app", "-config", "/etc/config/compose-config.yaml"]
  
  scheduler:
    image: scheduler:develop
    depends_on:
      config_service:
          condition: service_completed_successfully
      db:
          condition: service_healthy
      mq:
          condition: service_healthy
    restart: always
    volumes:
      - ./config:/etc/config:ro
    entrypoint: ["/opt/scheduler/scheduler-app", "-config", "/etc/config/compose-config.yaml"]
  
  sender:
    image: sender:develop
    restart: always  
    depends_on:
      config_service:
        condition: service_completed_successfully
      mq:
        condition: service_healthy
    volumes:
      - ./config:/etc/config:ro
    entrypoint: ["/opt/sender/sender-app", "-config", "/etc/config/compose-config.yaml"]
  
  integration_test:
    image: integration:develop
    profiles:
      - manual   
    restart: "no"   
    depends_on:
      sender:
          condition: service_started
      calendar:
          condition: service_started
      mq:
          condition: service_healthy
    entrypoint: ["sh", "-c", "go test /go/src/integration_tests -v"]

volumes:
  pg_data:
